#!/bin/bash

# Good info: Greg KH's talk
# Also: https://home.regit.org/technical-articles/git-for-the-newbie/

git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
cd linux
git branch   learning
git checkout learning
git status

make mrproper
cp /usr/src/linux/.config .
make -j8

# Now make changes
# (crickets)

# Now build, stage, and commit them.
git status	# see which files we changed
git diff	# check what we changed
make -j8
git add .
git commit -s

# commit d21ab032864aeae2f35f5f666ae614838c029de4
# Author: Jason Wilkes <letshaveanadventure@gmail.com>
# Date:   Mon Nov 24 16:28:16 2014 -0800
# 
#     locking: Fix dangling references to nonexistent files
#     
#     Commit e25a64c4017e (and others in the same series) moved the locking
#     code to kernel/locking/. This patch just updates various docs and
#     comments (things like "see kernel/semaphore.c for documentation")
#     to refer to the new locations.
#     
#     Signed-off-by: Jason Wilkes <letshaveanadventure@gmail.com>
#

# Ways of checking out what we did
git diff master learning	# Just shows the diff
git diff master			# Same as above, if we're on the learning branch
git show			# Shows our commit *and* the diff (nice)
git show --pretty=full


# Make the patch!
git format-patch master..learning

# Check the patch!
scripts/checkpatch.pl 0001-locking-Fix-dangling-references-to-nonexistent-files.patch

# This spits out 1 warning and 1 error, but I'm pretty sure 
# both are bugs (or don't matter). Here's why:

# The error
# =========
# ERROR: Please use 12 or more chars for the git commit ID like: 'Commit e25a64c4017e ("locking: Move the semaphore core to kernel/locking/")'
# #6: 
# Commit e25a64c4017e (and others in the same series) moved the locking

# This *is* 12 characters. Also, I grepped the output of git log for "Commit" and clearly the
# de facto standard length of the commit id (when referencing other commits) is 12 characters.

# The warning
# ===========
# WARNING: line over 80 characters
# #50: FILE: include/linux/lockdep.h:27:
# + * We'd rather not expose kernel/locking/lockdep_states.h this wide, but we do need

# Now, Greg KH mentioned in a talk that the 80 char line limit is starting to go away.
# Further, I've run checkpatch on drivers before, and they have *tons* of warnings about
# lines being too long, which suggests that the limit has in fact started to go away
# (since GKH's talk).
# The real issue is whether this is the longest line in the file.
# If it is, I fucked up. If not, then people are breaking this rule anyway.
# Let's see!

# scripts/checkpatch.pl -f include/linux/lockdep.h
# Good. there are *tons* of warnings about lines being too long, and some are 
# longer than the one I changed. 

# So I'll send it off as is, and see what happens. This will actually be a good 
# learning experience: since there's exactly 1 warning and 1 error, and neither
# seems to really matter (1 is clearly a bug in checkpatch.pl, and the other is
# a social norm that's going away, and has already been broken in the same file)
# this will let me learn how the kernel community responds to checkpatch 
# "violations" in cases where they're (a priori) 100% reasonable. Alright!



# Now figure out who the maintainer is.

# Here was my first guess at how to do this for a whole directory
scripts/get_maintainer.pl -f kernel/locking/
# This gives:
# Peter Zijlstra <peterz@infradead.org> (maintainer:LOCKDEP AND LOCKSTAT)
# Ingo Molnar <mingo@redhat.com> (maintainer:LOCKDEP AND LOCKSTAT)
# linux-kernel@vger.kernel.org (open list:LOCKDEP AND LOCKSTAT)

# Here's a better way, from GKH's talk:
scripts/get_maintainer.pl 0001-locking-Fix-dangling-references-to-nonexistent-files.patch 
# Peter Zijlstra <peterz@infradead.org> (maintainer:LOCKDEP AND LOCKSTAT,commit_signer:1/2=50%,authored:1/2=50%,added_lines:4/5=80%,removed_lines:8/9=89%)

# Ingo Molnar <mingo@redhat.com> (maintainer:LOCKDEP AND LOCKSTAT,commit_signer:1/2=50%)
# Jonathan Corbet <corbet@lwn.net> (maintainer:DOCUMENTATION)
# Paul Mackerras <paulus@samba.org> (supporter:PERFORMANCE EVENT...)
# Arnaldo Carvalho de Melo <acme@kernel.org> (supporter:PERFORMANCE EVENT...)
# Thomas Gleixner <tglx@linutronix.de> (commit_signer:1/2=50%)
# Jason Wilkes <letshaveanadventure@gmail.com> (commit_signer:1/2=50%,authored:1/2=50%,added_lines:1/5=20%,removed_lines:1/9=11%,commit_signer:1/1=100%,authored:1/1=100%,added_lines:1/1=100%,removed_lines:1/1=100%)
# linux-kernel@vger.kernel.org (open list:LOCKDEP AND LOCKSTAT)
# linux-doc@vger.kernel.org (open list:DOCUMENTATION)


# Okay... that's a *lot* of scary people. Let's test this first:

# Multiple websites suggested doing this to make things more readable if you have multiple patches. I'll do it anyway.
# I should probably only have to do this once. I assume it's saved in my git config after this.
# git config --global sendemail.chainreplyto false
# NOTE: This is apparently the default now.


# First I have to set up my gmail address to work with git send-email
git config --global sendemail.smtpencryption tls
git config --global sendemail.smtpserver smtp.gmail.com
git config --global sendemail.smtpuser letshaveanadventure@gmail.com
git config --global sendemail.smtpserverport 587
# git config --global sendemail.smtppass DONT_DO_THIS!


# Now try to send it to myself, and see if it works.

# First try showed this:
# Can't locate Net/SMTP/SSL.pm in @INC (you may need to install the Net::SMTP::SSL module) (@INC contains: /usr/share/perl5/site_perl /usr/lib/perl5/site_perl /usr/lib/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib/perl5/core_perl /usr/share/perl5/core_perl .) at /usr/lib/git-core/git-send-email line 1256.

# Lets see what we need...
# pacman -Ss perl | grep smtp
# community/perl-net-smtp-ssl 1.01-4

# Hey! That was easy. Let's get it.
pacman -S perl-net-smtp-ssl

# And try again...

# This time we got:
# Need MIME::Base64 and Authen::SASL todo auth at /usr/lib/git-core/git-send-email line 1281.
# fatal: 'send-email' appears to be a git command, but we were not
# able to execute it. Maybe git-send-email is broken?

# Let's see what else we need:
# pacman -Ss perl | grep -Ei 'mime|auth.*sasl'
# Let's give these a shot
pacman -S perl-email-mime perl-mime-tools perl-authen-sasl

# Third time's a charm?
git send-email  --to  letshaveanadventure@gmail.com 	\
		--cc  jason.wilkes@psych.ucsb.edu 	\
		--bcc jasonwilkes@umail.ucsb.edu 	\
		0001-locking-Fix-dangling-references-to-nonexistent-files.patch

# And it worked!
#
# We get the following output:
# Send this email? ([y]es|[n]o|[q]uit|[a]ll): y
# Password for 'smtp://letshaveanadventure@gmail.com@smtp.gmail.com:587': 
# OK. Log says:
# Server: smtp.gmail.com
# MAIL FROM:<letshaveanadventure@gmail.com>
# RCPT TO:<letshaveanadventure@gmail.com>
# RCPT TO:<jason.wilkes@psych.ucsb.edu>
# RCPT TO:<jasonwilkes@umail.ucsb.edu>
# From: Jason Wilkes <letshaveanadventure@gmail.com>
# To: letshaveanadventure@gmail.com
# Cc: jason.wilkes@psych.ucsb.edu
# Subject: [PATCH] locking: Fix dangling references to nonexistent files
# Date: Mon, 24 Nov 2014 18:05:24 -0800
# Message-Id: <1416881124-5107-1-git-send-email-letshaveanadventure@gmail.com>
# X-Mailer: git-send-email 2.1.3
# 
# Result: 250 2.0.0 OK 1416881151 z17sm2927660oig.6 - gsmtp

# Now go to my gmail, open the email, hit "show original," and download the email as plain text.
# Then diff the downloaded patch against the patch made by git, to make sure nothing changed.

# Hey! After removing some of the header info (which differed between the two)
# the two files were 100% identical (same md5sum). This means that no tabs or hidden characters
# mysteriously disappeared without us knowing. Let's go.

# Let's double-check who we should send this to...
./scripts/get_maintainer.pl 0001-locking-Fix-dangling-references-to-nonexistent-files.patch

# Removing some cruft, we get
# Peter Zijlstra <peterz@infradead.org>
# Ingo Molnar <mingo@redhat.com>
# Jonathan Corbet <corbet@lwn.net>
# Paul Mackerras <paulus@samba.org>
# Arnaldo Carvalho de Melo <acme@kernel.org>
# Thomas Gleixner <tglx@linutronix.de>
# Jason Wilkes <letshaveanadventure@gmail.com>
# linux-kernel@vger.kernel.org
# linux-doc@vger.kernel.org

# Hmm... that's an awful lot of people for such a simple patch.
# I think I'll just run get_maintainer on the kernel/locking/ directory
# and send it to the people who show up there.
scripts/get_maintainer.pl -f kernel/locking/

# MAINTAINERS
# Peter Zijlstra <peterz@infradead.org> (maintainer:LOCKDEP AND LOCKSTAT)
# Ingo Molnar <mingo@redhat.com> (maintainer:LOCKDEP AND LOCKSTAT)
# linux-kernel@vger.kernel.org (open list:LOCKDEP AND LOCKSTAT)

# There we go. That's a bit less scary (still... jesus fucking christ...)
# ...
# ...
# ...
# Okay then. Time to face the music...

git send-email  --to peterz@infradead.org 		\
		--cc mingo@redhat.com 			\
		--cc linux-kernel@vger.kernel.org 	\
		--cc letshaveanadventure@gmail.com 	\
		0001-locking-Fix-dangling-references-to-nonexistent-files.patch

# (mbox) Adding cc: Jason Wilkes <letshaveanadventure@gmail.com> from line 'From: Jason Wilkes <letshaveanadventure@gmail.com>'
# (body) Adding cc: Jason Wilkes <letshaveanadventure@gmail.com> from line 'Signed-off-by: Jason Wilkes <letshaveanadventure@gmail.com>'
# 
# From: Jason Wilkes <letshaveanadventure@gmail.com>
# To: peterz@infradead.org
# Cc: mingo@redhat.com,
# 	linux-kernel@vger.kernel.org,
# 	letshaveanadventure@gmail.com
# Subject: [PATCH] locking: Fix dangling references to nonexistent files
# Date: Mon, 24 Nov 2014 18:36:03 -0800
# Message-Id: <1416882963-5664-1-git-send-email-letshaveanadventure@gmail.com>
# X-Mailer: git-send-email 2.1.3
# 
#     The Cc list above has been expanded by additional
#     addresses found in the patch commit message. By default
#     send-email prompts before sending whenever this occurs.
#     This behavior is controlled by the sendemail.confirm
#     configuration setting.
# 
#     For additional information, run 'git send-email --help'.
#     To retain the current behavior, but squelch this message,
#     run 'git config --global sendemail.confirm auto'.
# 
# Send this email? ([y]es|[n]o|[q]uit|[a]ll): y
# Password for 'smtp://letshaveanadventure@gmail.com@smtp.gmail.com:587': 
# OK. Log says:
# Server: smtp.gmail.com
# MAIL FROM:<letshaveanadventure@gmail.com>
# RCPT TO:<peterz@infradead.org>
# RCPT TO:<mingo@redhat.com>
# RCPT TO:<linux-kernel@vger.kernel.org>
# RCPT TO:<letshaveanadventure@gmail.com>
# From: Jason Wilkes <letshaveanadventure@gmail.com>
# To: peterz@infradead.org
# Cc: mingo@redhat.com,
# 	linux-kernel@vger.kernel.org,
# 	letshaveanadventure@gmail.com
# Subject: [PATCH] locking: Fix dangling references to nonexistent files
# Date: Mon, 24 Nov 2014 18:36:03 -0800
# Message-Id: <1416882963-5664-1-git-send-email-letshaveanadventure@gmail.com>
# X-Mailer: git-send-email 2.1.3
# 
# Result: 250 2.0.0 OK 1416883014 b19sm6450851oih.21 - gsmtp




#  ______________ 
# < holy shit... >
#  -------------- 
#         \   ^__^
#          \  (oo)\_______
#             (__)\       )\/\
#                 ||----w |
#                 ||     ||
# 


# (Later)
# It's on LKML! GAH! --> https://lkml.org/lkml/2014/11/24/915
# (I knew it would be, but still...)

